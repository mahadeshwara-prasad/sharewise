CREATE TABLE users(
    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_address text NOT NULL,
    message text NOT NULL,
);

CREATE TABLE groups(
	group_id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	group_address text NOT NULL
);

CREATE TABLE notification (
	notify_id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	notify_to int NOT NULL,
	notify_head text NOT NULL,
	notify_body text,
	group_id int NOT NULL,
	req_idx int NOT NULL,
	notify_time timestamp NOT NULL DEFAULT current_timestamp,
	notify_clear boolean NOT NULL,
	CONSTRAINT not_to FOREIGN KEY(notify_to) REFERENCES users(id),
	CONSTRAINT not_to FOREIGN KEY(group_id) REFERENCES groups(group_id)
);

CREATE TABLE messages (
	msg_id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	msg_from int NOT NULL,
	fkgroup_id int NOT NULL,
	msg_text text NOT NULL,
	msg_reaction text,
	msg_time timestamp NOT NULL DEFAULT current_timestamp,
	CONSTRAINT group_id FOREIGN KEY(fkgroup_id) REFERENCES groups(group_id),
	CONSTRAINT user_id FOREIGN KEY(msg_from) REFERENCES users(id)
);

SELECT * from groups
JOIN users ON groups.user_id=users.id;

INSERT INTO notification (notify_to,notify_head,notify_body,notify_time,notify_clear) 
	values (1,'request cancled','request of this group is canceled',current_timestamp,false);

SELECT * from notification
JOIN users ON notification.notify_to=users.id;

INSERT INTO messages (msg_from,fkgroup_id,msg_text,msg_reaction) VALUES (1,1,'hi how are you','haha');

SELECT * from messages
JOIN users ON messages.msg_from=users.id
JOIN groups ON messages.fkgroup_id=groups.group_id
;

-- INSERT INTO users(address, message)
-- SELECT '0x222222', '0x111111'
-- WHERE
-- NOT EXISTS (
-- SELECT address FROM users WHERE address = '0x222222'
-- );

